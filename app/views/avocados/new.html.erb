
<div class="container">
  <div class="row">
  
    <div class="col-md-12">
      <h3 class="headline margin-bottom-25 margin-top-65">Add a new Avo</h3>
    </div>
<%= form_tag "/avocados", method: :post do %>
  <div>
    Type: <select name="category">
     <option type="integer" value="Tiny Hass">Tiny Hass</option>
     <option type="integer" value="Small Hass" selected="selected">Small Hass (most common)</option>
     <option type="integer" value="Medium Hass">Medium Hass</option>
     <option type="integer" value="Large Hass">Large Hass</option>
     <option type="integer" value="Jumbo Hass">Jumbo Hass</option>
     <option type="integer" value="Other Kind">Other Kind</option>
    </select>
  </div>
  <div>
  Organic:
    <input type="radio" id="organic_yes"
     name="organic" value=true>
    <label for="organic_yes">Yes</label>
    <input type="radio" id="organic_no"
     name="organic" value=false checked>
    <label for="organic_no">No</label>
  </div>
  <div>
    Price: $<input type="number" name="price" min="0.00" max="6.00" step="0.01">/ each
  </div>
  <div>
    Ripeness: <input type="number" min="1" max="10" name="ripeness">(1 firm, 10 overripe)
  </div>
  <div>
    Description:<br><textarea name="notes" cols="40" rows="5"></textarea>
  </div>
  <div>
  Can be found at: <br>
      <div>
  <select name="location_id">
    <option selected="selected"></option>
    <% @locations.each do |location|%>
     <option type="integer" value="<%=location.id%>"><%=location.name%> <%=location.address%></option>
    <%end%> 
    </select>
  </div>
    Business Name: <input name="name"><br>
    Business Address: <input name="address"><br>
    Business Latitude: <input name="lat"><br>
    Business Longitude: <input name="lng"><br>

  </div>
  <input type="submit" value="Add Avo">
 <%end%>



<div id="locationField">
  <input id="autocomplete" placeholder="Enter your address"
         onFocus="geolocate()" type="text"></input>
</div>

<table id="address">
  <tr>
    <td class="label">Name</td>
    <td class="wideField" colspan="3"><input class="field" id="place_name"
          disabled="true"></input></td>
  </tr>
  <tr>
    <td class="label">Street address</td>
    <td class="wideField" colspan="3"><input class="field" id="place_address"
          disabled="true"></input></td>
  </tr>

    <tr>
    <td class="label">Lat</td>
    <td class="slimField"><input class="field"
          id="place_lat" disabled="true"></input></td>
    <td class="label">Lng</td>
    <td class="wideField"><input class="field" id="place_lng"
          disabled="true"></input></td>
  </tr>
</table>
<script type="text/javascript" src="https://maps.googleapis.com/maps/api/js?key=<%=ENV['maps_api']%>&libraries=places&callback=initAutocomplete"
        async defer></script> 
<script>
var placeSearch, autocomplete;
var componentForm = {
  //street_number: 'short_name',
  //route: 'long_name',
  //locality: 'long_name',
  //administrative_area_level_1: 'short_name',
  //country: 'long_name',
  //postal_code: 'short_name',
  //lat: 'place_lat',
  //lng: 'place_lng'
  //name: 'place_name',
  //addr: 'place_address'
};

function initAutocomplete() {
  autocomplete = new google.maps.places.Autocomplete(
      /** @type {!HTMLInputElement} */(document.getElementById('autocomplete')),
      {types: ['establishment']});

  // When the user selects an address from the dropdown, populate the address
  // fields in the form.
  autocomplete.addListener('place_changed', fillInAddress);
}

function fillInAddress() {
//   // Get the place details from the autocomplete object.
   var place = autocomplete.getPlace();

//   for (var component in componentForm) {
//     document.getElementById(component).value = '';
//     document.getElementById(component).disabled = false;
//   }

//   // Get each component of the address from the place details
//   // and fill the corresponding field on the form.
//   for (var i = 0; i < place.address_components.length; i++) {
//     var addressType = place.address_components[i].types[0];
//     if (componentForm[addressType]) {
//       var val = place.address_components[i][componentForm[addressType]];
//       document.getElementById(addressType).value = val;
//     }
//   }
  document.getElementById('place_name').value = place.name;
  document.getElementById('place_address').value = place.formatted_address;
  document.getElementById('place_lat').value = place.geometry.location.lat();
  document.getElementById('place_lng').value = place.geometry.location.lng();

  
}

// Bias the autocomplete object to the user's geographical location,
// as supplied by the browser's 'navigator.geolocation' object.
function geolocate() {
  if (navigator.geolocation) {
    navigator.geolocation.getCurrentPosition(function(position) {
      var geolocation = {
        lat: position.coords.latitude,
        lng: position.coords.longitude
      };
      var circle = new google.maps.Circle({
        center: geolocation,
        radius: position.coords.accuracy
      });
      autocomplete.setBounds(circle.getBounds());
    });
  }
}
</script>

</div>


  </div>
  </div>
  </div>
</div>
<!-- Scripts
================================================== -->

<script type="text/javascript" src="https://code.jquery.com/jquery-1.12.4.js"></script>
<script type="text/javascript" src="https://code.jquery.com/ui/1.12.1/jquery-ui.js"></script>

